from collections import namedtuple
import earit as ea
import eload as el
import sload as sl
Opc = namedtuple("Opcode", ['mnemonic', 'cycl', 'len', 'func', 'args'])


def mock():
    return


pointer = {
    0x00: Opc('NOP', 4, 1, mock),
    0x01: Opc('LD BC,nn', 12, 3, mock),
    0x02: Opc('LD (BC),A', 8, 1, mock),
    0x03: Opc('INC BC', 8, 1, mock),
    0x04: Opc('INC B', 4, 1, mock),
    0x05: Opc('DEC B', 4, 1, mock),
    0x06: Opc('LD B,n', 8, 2, mock),
    0x07: Opc('RLCA', 4, 1, mock),
    0x08: Opc('LD (nn),SP', 20, 3, mock),
    0x09: Opc('ADD HL,BC', 8, 1, mock),
    0x0A: Opc('LD A,(BC)', 8, 1, mock),
    0x0B: Opc('DEC BC', 8, 1, mock),
    0x0C: Opc('INC C', 4, 1, mock),
    0x0D: Opc('DEC C', 4, 1, mock),
    0x0E: Opc('LD C,n', 4, 1, mock),
    0x0F: Opc('RRCA', 4, 1, mock),
    0x10: Opc('STOP', 4, 2, mock),
    0x11: Opc('LD DE,nn', 12, 3, mock),
    0x12: Opc('LD (DE),A', 8, 1, mock),
    0x13: Opc('INC DE', 8, 1, mock),
    0x14: Opc('INC D', 4, 1, mock),
    0x15: Opc('DEC D', 4, 1, mock),
    0x16: Opc('LD D,n', 8, 2, mock),
    0x17: Opc('RLA', 4, 1, mock),
    0x18: Opc('JR i8', 12, 2, mock),
    0x19: Opc('ADD HL,DE', 8, 1, mock),
    0x1A: Opc('LD A,(DE)', 8, 1, mock),
    0x1B: Opc('DEC DE', 8, 1, mock),
    0x1C: Opc('INC E', 4, 1, mock),
    0x1D: Opc('DEC E', 4, 1, mock),
    0x1E: Opc('LD E,n', 8, 2, mock),
    0x1F: Opc('RRA', 4, 1, mock),
    0x20: Opc('JR NZ,i8', 8, 2, mock),
    0x21: Opc('LD HL,nn', 12, 3, mock),
    0x22: Opc('LD (HL+),A', 8, 1, mock),
    0x23: Opc('INC HL', 8, 1, mock),
    0x24: Opc('INC H', 4, 1, mock),
    0x25: Opc('DEC H', 4, 1, mock),
    0x26: Opc('LD H,n', 8, 2, mock),
    0x27: Opc('DAA', 4, 1, mock),
    0x28: Opc('JR Z,i8', 8, 2, mock),
    0x29: Opc('ADD HL,HL', 8, 1, mock),
    0x2A: Opc('LD A,(HL+)', 8, 1, mock),
    0x2B: Opc('DEC HL', 8, 1, mock),
    0x2C: Opc('INC L', 4, 1, mock),
    0x2D: Opc('DEC L', 4, 1, mock),
    0x2E: Opc('LD L,N', 8, 2, mock),
    0x2F: Opc('CPL', 4, 1, mock),
    0x30: Opc('JR NC,i8', 8, 2, mock),
    0x31: Opc('LD SP,nn', 12, 3, mock),
    0x32: Opc('LD (HL-),A', 8, 1, mock),
    0x33: Opc('INC SP', 8, 1, mock),
    0x34: Opc('INC (HL)', 12, 1, mock),
    0x35: Opc('DEC (HL)', 12, 1, mock),
    0x36: Opc('LD (HL),n', 12, 2, mock),
    0x37: Opc('SCF', 4, 1, mock),
    0x38: Opc('JR C,i8', 8, 2, mock),
    0x39: Opc('ADD HL,SP', 8, 1, mock),
    0x3A: Opc('LD A,(HL-)', 8, 1, mock),
    0x3B: Opc('DEC SP', 8, 1, mock),
    0x3C: Opc('INC A', 4, 1, mock),
    0x3D: Opc('DEC A', 4, 1, mock),
    0x3E: Opc('LD A,n', 8, 2, mock),
    0x3F: Opc('CCF', 4, 1, mock),
    0x40: Opc('LD B,B', 4, 1, mock),
    0x41: Opc('LD B,C', 4, 1, mock),
    0x42: Opc('LD B,D', 4, 1, mock),
    0x43: Opc('LD B,E', 4, 1, mock),
    0x44: Opc('LD B,H', 4, 1, mock),
    0x45: Opc('LD B,L', 4, 1, mock),
    0x46: Opc('LD B,(HL)', 8, 1, mock),
    0x47: Opc('LD B,A', 4, 1, mock),
    0x48: Opc('LD C,B', 4, 1, mock),
    0x49: Opc('LD C,C', 4, 1, mock),
    0x4A: Opc('LD C,D', 4, 1, mock),
    0x4B: Opc('LD C,E', 4, 1, mock),
    0x4C: Opc('LD C,H', 4, 1, mock),
    0x4D: Opc('LD C,L', 4, 1, mock),
    0x4E: Opc('LD C,(HL)', 8, 1, mock),
    0x4F: Opc('LD C,A', 4, 1, mock),
    0x50: Opc('LD D,B', 4, 1, mock),
    0x51: Opc('LD D,C', 4, 1, mock),
    0x52: Opc('LD D,D', 4, 1, mock),
    0x53: Opc('LD D,E', 4, 1, mock),
    0x54: Opc('LD D,H', 4, 1, mock),
    0x55: Opc('LD D,L', 4, 1, mock),
    0x56: Opc('LD D,(HL)', 8, 1, mock),
    0x57: Opc('LD D,A', 4, 1, mock),
    0x58: Opc('LD E,B', 4, 1, mock),
    0x59: Opc('LD E,C', 4, 1, mock),
    0x5A: Opc('LD E,D', 4, 1, mock),
    0x5B: Opc('LD E,E', 4, 1, mock),
    0x5C: Opc('LD E,H', 4, 1, mock),
    0x5D: Opc('LD E,L', 4, 1, mock),
    0x5E: Opc('LD E,(HL)', 8, 1, mock),
    0x5F: Opc('LD E,A', 4, 1, mock),
    0x60: Opc('LD H,B', 4, 1, mock),
    0x61: Opc('LD H,C', 4, 1, mock),
    0x62: Opc('LD H,D', 4, 1, mock),
    0x63: Opc('LD H,E', 4, 1, mock),
    0x64: Opc('LD H,H', 4, 1, mock),
    0x65: Opc('LD H,L', 4, 1, mock),
    0x66: Opc('LD H,(HL)', 8, 1, mock),
    0x67: Opc('LD H,A', 4, 1, mock),
    0x68: Opc('LD L,B', 4, 1, mock),
    0x69: Opc('LD L,C', 4, 1, mock),
    0x6A: Opc('LD L,D', 4, 1, mock),
    0x6B: Opc('LD L,E', 4, 1, mock),
    0x6C: Opc('LD L,H', 4, 1, mock),
    0x6D: Opc('LD L,L', 4, 1, mock),
    0x6E: Opc('LD L,(HL)', 8, 1, mock),
    0x6F: Opc('LD L,A', 4, 1, mock),
    0x70: Opc('LD (HL),B', 8, 1, mock),
    0x71: Opc('LD (HL),C', 8, 1, mock),
    0x72: Opc('LD (HL),D', 8, 1, mock),
    0x73: Opc('LD (HL),E', 8, 1, mock),
    0x74: Opc('LD (HL),H', 8, 1, mock),
    0x75: Opc('LD (HL),L', 8, 1, mock),
    0x76: Opc('HALT', 4, 1, mock),
    0x77: Opc('LD (HL),A', 8, 1, mock),
    0x78: Opc('LD A,B', 4, 1, mock),
    0x79: Opc('LD A,C', 4, 1, mock),
    0x7A: Opc('LD A,D', 4, 1, mock),
    0x7B: Opc('LD A,E', 4, 1, mock),
    0x7C: Opc('LD A,H', 4, 1, mock),
    0x7D: Opc('LD A,L', 4, 1, mock),
    0x7E: Opc('LD A,(HL)', 8, 1, mock),
    0x7F: Opc('LD A,A', 4, 1, mock),
    0x80: Opc('ADD A,B', 4, 1, mock),
    0x81: Opc('ADD A,C', 4, 1, mock),
    0x82: Opc('ADD A,D', 4, 1, mock),
    0x83: Opc('ADD A,E', 4, 1, mock),
    0x84: Opc('ADD A,H', 4, 1, mock),
    0x85: Opc('ADD A,L', 4, 1, mock),
    0x86: Opc('ADD A,(HL)', 8, 1, mock),
    0x87: Opc('ADD A,A', 4, 1, mock),
    0x88: Opc('ADC A,B', 4, 1, mock),
    0x89: Opc('ADC A,C', 4, 1, mock),
    0x8A: Opc('ADC A,D', 4, 1, mock),
    0x8B: Opc('ADC A,E', 4, 1, mock),
    0x8C: Opc('ADC A,H', 4, 1, mock),
    0x8D: Opc('ADC A,L', 4, 1, mock),
    0x8E: Opc('ADC A,(HL)', 8, 1, mock),
    0x8F: Opc('ADC A,A', 4, 1, mock),
    0x90: Opc('SUB A,B', 4, 1, mock),
    0x91: Opc('SUB A,C', 4, 1, mock),
    0x92: Opc('SUB A,D', 4, 1, mock),
    0x93: Opc('SUB A,E', 4, 1, mock),
    0x94: Opc('SUB A,H', 4, 1, mock),
    0x95: Opc('SUB A,L', 4, 1, mock),
    0x96: Opc('SUB A,(HL)', 8, 1, mock),
    0x97: Opc('SUB A,A', 4, 1, mock),
    0x98: Opc('SBC A,B', 4, 1, mock),
    0x99: Opc('SBC A,C', 4, 1, mock),
    0x9A: Opc('SBC A,D', 4, 1, mock),
    0x9B: Opc('SBC A,E', 4, 1, mock),
    0x9C: Opc('SBC A,H', 4, 1, mock),
    0x9D: Opc('SBC A,L', 4, 1, mock),
    0x9E: Opc('SBC A,(HL)', 8, 1, mock),
    0x9F: Opc('SBC A,A', 4, 1, mock),
    0xA0: Opc('AND A,B', 4, 1, mock),
    0xA1: Opc('AND A,C', 4, 1, mock),
    0xA2: Opc('AND A,D', 4, 1, mock),
    0xA3: Opc('AND A,E', 4, 1, mock),
    0xA4: Opc('AND A,H', 4, 1, mock),
    0xA5: Opc('AND A,L', 4, 1, mock),
    0xA6: Opc('AND A,(HL)', 8, 1, mock),
    0xA7: Opc('AND A,A', 4, 1, mock),
    0xA8: Opc('XOR A,B', 4, 1, mock),
    0xA9: Opc('XOR A,C', 4, 1, mock),
    0xAA: Opc('XOR A,D', 4, 1, mock),
    0xAB: Opc('XOR A,E', 4, 1, mock),
    0xAC: Opc('XOR A,H', 4, 1, mock),
    0xAD: Opc('XOR A,L', 4, 1, mock),
    0xAE: Opc('XOR A,(HL)', 8, 1, mock),
    0xAF: Opc('XOR A,A', 4, 1, mock),
    0xB0: Opc('OR A,B', 4, 1, mock),
    0xB1: Opc('OR A,C', 4, 1, mock),
    0xB2: Opc('OR A,D', 4, 1, mock),
    0xB3: Opc('OR A,E', 4, 1, mock),
    0xB4: Opc('OR A,H', 4, 1, mock),
    0xB5: Opc('OR A,L', 4, 1, mock),
    0xB6: Opc('OR A,(HL)', 8, 1, mock),
    0xB7: Opc('OR A,A', 4, 1, mock),
    0xB8: Opc('CP A,B', 4, 1, mock),
    0xB9: Opc('CP A,C', 4, 1, mock),
    0xBA: Opc('CP A,D', 4, 1, mock),
    0xBB: Opc('CP A,E', 4, 1, mock),
    0xBC: Opc('CP A,H', 4, 1, mock),
    0xBD: Opc('CP A,L', 4, 1, mock),
    0xBE: Opc('CP A,(HL)', 8, 1, mock),
    0xBF: Opc('CP A,A', 4, 1, mock),
    0xC0: Opc('RET NZ', 8, 1, mock),
    0xC1: Opc('POP BC', 12, 1, mock),
    0xC2: Opc('JP NZ,nn', 12, 3, mock),
    0xC3: Opc('JP nn', 16, 3, mock),
    0xC4: Opc('CALL NZ,nn', 12, 3, mock),
    0xC5: Opc('PUSH BC', 16, 1, mock),
    0xC6: Opc('ADD A,n', 8, 2, mock),
    0xC7: Opc('RST 00h', 16, 1, mock),
    0xC8: Opc('RET Z', 8, 1, mock),
    0xC9: Opc('RET', 16, 1, mock),
    0xCA: Opc('JP Z,nn', 12, 3, mock),
    0xCB: Opc('PREFIX CB', 4, 1, mock),
    0xCC: Opc('CALL Z,nn', 12, 3, mock),
    0xCD: Opc('CALL nn', 24, 3, mock),
    0xCE: Opc('ADC A,n', 8, 2, mock),
    0xCF: Opc('RST 08h', 16, 1, mock),
    0xD0: Opc('RET NC', 8, 1, mock),
    0xD1: Opc('POP DE', 12, 1, mock),
    0xD2: Opc('JP NC,nn', 12, 3, mock),
    0xD4: Opc('CALL NC,nn', 12, 3, mock),
    0xD5: Opc('PUSH DE', 16, 1, mock),
    0xD6: Opc('SUB A,n', 8, 2, mock),
    0xD7: Opc('RST 10h', 16, 1, mock),
    0xD8: Opc('RET C', 8, 1, mock),
    0xD9: Opc('RETI', 16, 1, mock),
    0xDA: Opc('JP C,nn', 12, 3, mock),
    0xDC: Opc('CALL C,nn', 12, 3, mock),
    0xDE: Opc('SBC A,n', 8, 2, mock),
    0xDF: Opc('RST 18h', 16, 1, mock),
    0xE0: Opc('LD (FF00+n),A', 12, 2, mock),
    0xE1: Opc('POP HL', 12, 1, mock),
    0xE2: Opc('LD (FF00+C),A', 8, 1, mock),
    0xE5: Opc('PUSH HL', 16, 1, mock),
    0xE6: Opc('AND A,n', 8, 2, mock),
    0xE7: Opc('RST 20h', 16, 1, mock),
    0xE8: Opc('ADD SP,i8', 16, 2, mock),
    0xE9: Opc('JP HL', 4, 1, mock),
    0xEA: Opc('LD (nn),A', 16, 3, mock),
    0xEE: Opc('XOR A,n', 8, 2, mock),
    0xEF: Opc('RST 28h', 16, 1, mock),
    0xF0: Opc('LD A,(FF00+n)', 12, 2, mock),
    0xF1: Opc('POP AF', 12, 1, mock),
    0xF2: Opc('LD A,(FF00+C)', 8, 1, mock),
    0xF3: Opc('DI', 4, 1, mock),
    0xF5: Opc('PUSH AF', 16, 1, mock),
    0xF6: Opc('OR A,n', 8, 2, mock),
    0xF7: Opc('RST 30h', 16, 1, mock),
    0xF8: Opc('LD HL,SP+i8', 12, 2, mock),
    0xF9: Opc('LD SP,HL', 8, 1, mock),
    0xFA: Opc('LD A,(nn)', 16, 3, mock),
    0xFB: Opc('EI', 4, 1, mock),
    0xFE: Opc('CP A,n', 8, 2, mock),
    0xFF: Opc('RST 38h', 16, 1, mock),
}